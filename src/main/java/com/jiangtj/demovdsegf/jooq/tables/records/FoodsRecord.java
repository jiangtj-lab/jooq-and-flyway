/*
 * This file is generated by jOOQ.
 */
package com.jiangtj.demovdsegf.jooq.tables.records;


import com.jiangtj.demovdsegf.jooq.tables.Foods;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 水果
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FoodsRecord extends UpdatableRecordImpl<FoodsRecord> implements Record6<Long, LocalDateTime, LocalDateTime, String, Integer, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mydatabase.foods.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydatabase.foods.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mydatabase.foods.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydatabase.foods.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>mydatabase.foods.modify_time</code>. 修改时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydatabase.foods.modify_time</code>. 修改时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>mydatabase.foods.name</code>. 名字
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydatabase.foods.name</code>. 名字
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mydatabase.foods.price</code>. 单价
     */
    public void setPrice(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydatabase.foods.price</code>. 单价
     */
    public Integer getPrice() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>mydatabase.foods.is_deleted</code>. 是否删除 0 否 1 是
     */
    public void setIsDeleted(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>mydatabase.foods.is_deleted</code>. 是否删除 0 否 1 是
     */
    public Byte getIsDeleted() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, LocalDateTime, LocalDateTime, String, Integer, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, LocalDateTime, LocalDateTime, String, Integer, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Foods.FOODS.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Foods.FOODS.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Foods.FOODS.MODIFY_TIME;
    }

    @Override
    public Field<String> field4() {
        return Foods.FOODS.NAME;
    }

    @Override
    public Field<Integer> field5() {
        return Foods.FOODS.PRICE;
    }

    @Override
    public Field<Byte> field6() {
        return Foods.FOODS.IS_DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component3() {
        return getModifyTime();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Integer component5() {
        return getPrice();
    }

    @Override
    public Byte component6() {
        return getIsDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value3() {
        return getModifyTime();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public Integer value5() {
        return getPrice();
    }

    @Override
    public Byte value6() {
        return getIsDeleted();
    }

    @Override
    public FoodsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FoodsRecord value2(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public FoodsRecord value3(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public FoodsRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public FoodsRecord value5(Integer value) {
        setPrice(value);
        return this;
    }

    @Override
    public FoodsRecord value6(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public FoodsRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, String value4, Integer value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FoodsRecord
     */
    public FoodsRecord() {
        super(Foods.FOODS);
    }

    /**
     * Create a detached, initialised FoodsRecord
     */
    public FoodsRecord(Long id, LocalDateTime createTime, LocalDateTime modifyTime, String name, Integer price, Byte isDeleted) {
        super(Foods.FOODS);

        setId(id);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
        setName(name);
        setPrice(price);
        setIsDeleted(isDeleted);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FoodsRecord
     */
    public FoodsRecord(com.jiangtj.demovdsegf.jooq.tables.pojos.Foods value) {
        super(Foods.FOODS);

        if (value != null) {
            setId(value.id());
            setCreateTime(value.createTime());
            setModifyTime(value.modifyTime());
            setName(value.name());
            setPrice(value.price());
            setIsDeleted(value.isDeleted());
            resetChangedOnNotNull();
        }
    }
}
